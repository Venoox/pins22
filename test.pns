var arr: [2]int;

fun main(): void = ({
    a = (^arr : ^int);
    arr[0] = 1;
    arr[1] = 2;

    printInt(arrIdx(a, 0)^);
    putChar(10);
    printInt(arrIdx(a, 1)^);
    putChar(10);
    putChar(10);

    f(a);
} where
    var a: ^int;
);

fun f(a: ^int): void = {
    a = (^arr : ^int);
    printInt(arrIdx(a, 0)^);
    putChar(10);
    printInt(arrIdx(a, 1)^);
    putChar(10);
};

fun arrIdx(arr : ^int, i : int) : ^int = (((arr : int) + (i * 8) ) : ^int);
fun putChar(c : int) : void = none;


#{
#  Writes int to stdout.
}#
fun printInt(num : int) : void = ({
    rev = 0;
    numZeros = 0;
    #{ Handle signedness }#
    if num < 0 then
        num = -num;
        putChar(('-' : int));
    else
        if num == 0 then
            numZeros = 1;
        end;
    end;

    #{ Reverse number }#
    while num do
        rev = rev * 10;
        rev = rev + (num % 10);
        num = num / 10;
        numZeros = numZeros + 1;
    end;

    #{ Print reversed }#
    while rev do
        c = (rev % 10) + ('0' : int);
        putChar(c);
        rev = rev / 10;
        numZeros = numZeros - 1;
    end;

    #{ Print trailing zeros }#
    while numZeros do
        putChar(('0' : int));
        numZeros = numZeros - 1;
    end;

} where
    var c : int;
    var rev : int;
    var numZeros : int;
);
